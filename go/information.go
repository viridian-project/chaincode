package main

import "time"

// InfoCategory is an enum used in type Information
type InfoCategory int

const (
	// GeneralInformation is a sustainability information not further specified
	GeneralInformation InfoCategory = 1 + iota
	// LifeCycleAnalysis is an information coming from a life cycle assessment/analysis of the product
	LifeCycleAnalysis
	// ExternalCosts is an information coming from an external costs analysis of the product, i.e. an estimation of the costs generated by the production that are not paid for by the producer, but must be paid for by society (often much later)
	ExternalCosts
	// StudyOrPaper is an information coming from a study created by an NGO or a scientific paper/article
	StudyOrPaper
	// PressArticle is an information coming from a journalistic article, e.g. published in a newspaper
	PressArticle
	// InvestigativeReport is an information coming from a (secret) investigation
	InvestigativeReport
	// CorporateSocialResponsibility is an information published by the producer itself in an effort of corporate social responsibility, either voluntarily or required by law
	CorporateSocialResponsibility
	// Jurisdiction is an information coming from a court sentence or similar
	Jurisdiction
	// OtherInformation is an information that does not fit into any other category
	OtherInformation
)

// Source is a super-class standing for different classes of sources
type Source struct {
}

// WebSource is an information source published/accessible on the world-wide web
type WebSource struct {
	Source
	URL        string    `json:"url"` // regex=/^[a-z]+:\/\/[^ ]+$/
	AccessDate time.Time `json:"accessDate"`
	Title      string    `json:"title"`   // optional
	Authors    []string  `json:"authors"` // optional
}

// BookSource is an information source published as a book
type BookSource struct {
	Source
	Title       string   `json:"title"`
	Authors     []string `json:"authors"`
	PublishYear int      `json:"publishYear"`
	Publisher   string   `json:"publisher"` // optional
	ISBN        string   `json:"isbn"`      // optional
	Pages       []int    `json:"pages"`     // range=[1,] optional
	URL         string   `json:"url"`       // regex=/^[a-z]+:\/\/[^ ]+$/ optional
}

// ArticleSource is an information source published as a scientific article in a journal
type ArticleSource struct {
	Source
	Title     string   `json:"title"`
	Authors   []string `json:"authors"`
	Journal   string   `json:"journal"`
	Year      int      `json:"year"`
	Month     int      `json:"month"`     // range=[1,12] optional
	Volume    int      `json:"volume"`    // optional
	FirstPage int      `json:"firstPage"` // optional
	LastPage  int      `json:"lastPage"`  // optional
	DOI       string   `json:"doi"`       // optional
	URL       string   `json:"url"`       // regex=/^[a-z]+:\/\/[^ ]+$/ optional
	BookTitle string   `json:"bookTitle"` // optional
	Editor    string   `json:"editor"`    // optional
}

// Information is the asset representing a sustainability information about a product/producer/label. It serves as basis for a sustainability rating/scoring.
type Information struct {
	UpdatableAsset
	DocType     string       `json:"docType"` // docType is used to distinguish the various types of objects in state database
	Title       string       `json:"title"`
	Category    InfoCategory `json:"category"`
	Target      string       `json:"target"` // ID of the targeted scorable asset
	Description string       `json:"description"`
	Sources     []Source     `json:"sources"`
	Weight      int32        `json:"weight"`
}
